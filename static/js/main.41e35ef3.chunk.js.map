{"version":3,"sources":["components/Header.js","constants/ActionTypes.js","actions/index.js","containers/Header.js","components/Footer.js","constants/TodoFilters.js","components/BookItem.js","context/BooksContext.js","components/BookList.js","selectors/index.js","containers/VisibleBookList.js","components/MainSection.js","containers/MainSection.js","components/App.js","reducers/todos.js","reducers/visibilityFilter.js","reducers/index.js","index.js"],"names":["Header","react_default","a","createElement","className","s","style","color","ADD_TODO","DELETE_TODO","EDIT_TODO","COMPLETE_TODO","COMPLETE_ALL_TODOS","CLEAR_COMPLETED","addBook","text","type","types","deleteBook","id","editBook","completeBook","completeAllBooks","clearCompleted","setVisibilityFilter","filter","connect","Footer","_FILTER_TITLES","Object","defineProperty","props","activeCount","itemWord","BookItem","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","statusChange","bind","assertThisInitialized","state","completed","book","_this$props","updateBookStatus","status","setState","_this2","_this$props2","volumeInfo","bookCompleted","element","checked","onChange","fontFamily","title","fontSize","textAlign","marginLeft","concat","authors","classnames","borderBottom","Component","BooksContext","React","createContext","BookList","_ref","actions","context_BooksContext","Consumer","_ref2","books","map","Fragment","BookItem_BookItem","assign","key","src","imageLinks","thumbnail","border","getTodos","todos","getVisibleBookList","createSelector","visibilityFilter","t","Error","getCompletedTodoCount","reduce","count","todo","VisibleBookList","filteredTodos","dispatch","bindActionCreators","TodoActions","MainSection","completedBooks","fetch","then","response","json","myData","items","bookId","newBooks","find","Provider","value","containers_VisibleBookList","components_Footer","completedCount","length","onClearCompleted","todosCount","App","containers_Header","containers_MainSection","initialState","arguments","undefined","action","rootReducer","combineReducers","toConsumableArray","maxId","Math","max","objectSpread","areAllMarked","every","store","createStore","reducer","render","react_redux_es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.41e35ef3.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = () => (\n  <header className=\"header\" s>\n    <h1 style={{color: 'rosybrown'}}>Books</h1>\n  </header>\n)\n\n\nexport default Header\n","export const ADD_TODO = 'ADD_TODO'\nexport const DELETE_TODO = 'DELETE_TODO'\nexport const EDIT_TODO = 'EDIT_TODO'\nexport const COMPLETE_TODO = 'COMPLETE_TODO'\nexport const COMPLETE_ALL_TODOS = 'COMPLETE_ALL_TODOS'\nexport const CLEAR_COMPLETED = 'CLEAR_COMPLETED'\nexport const SET_VISIBILITY_FILTER = 'SET_VISIBILITY_FILTER'\n","import * as types from '../constants/ActionTypes'\n\nexport const addBook = text => ({ type: types.ADD_TODO, text })\nexport const deleteBook = id => ({ type: types.DELETE_TODO, id })\nexport const editBook = (id, text) => ({ type: types.EDIT_TODO, id, text })\nexport const completeBook = id => ({ type: types.COMPLETE_TODO, id })\nexport const completeAllBooks = () => ({ type: types.COMPLETE_ALL_TODOS })\nexport const clearCompleted = () => ({ type: types.CLEAR_COMPLETED })\nexport const setVisibilityFilter = filter => ({ type: types.SET_VISIBILITY_FILTER, filter})\n","import { connect } from 'react-redux'\nimport Header from '../components/Header'\nimport { addBook } from '../actions'\n\nexport default connect(null, { addBook })(Header)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { SHOW_ALL, SHOW_COMPLETED, SHOW_ACTIVE } from '../constants/TodoFilters'\n\nconst FILTER_TITLES = {\n  [SHOW_ALL]: 'All',\n  [SHOW_ACTIVE]: 'Active',\n  [SHOW_COMPLETED]: 'Completed'\n}\n\nconst Footer = (props) => {\n  const { activeCount } = props\n  const itemWord = activeCount === 1 ? 'book' : 'books'\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        <strong>{activeCount || 'No'}</strong> {itemWord} left to read\n      </span>\n    \n    </footer>\n  )\n}\n\nFooter.propTypes = {\n  completedCount: PropTypes.number.isRequired,\n  activeCount: PropTypes.number.isRequired,\n  onClearCompleted: PropTypes.func.isRequired,\n}\n\nexport default Footer\n","export const SHOW_ALL = 'show_all'\nexport const SHOW_COMPLETED = 'show_completed'\nexport const SHOW_ACTIVE = 'show_active'\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\nexport default class BookItem extends Component {\n  static propTypes = {\n    book: PropTypes.object.isRequired,\n    editBook: PropTypes.func.isRequired,\n    deleteBook: PropTypes.func.isRequired,\n    completeBook: PropTypes.func.isRequired\n  }\n  constructor(props) {\n    super(props);\n    this.statusChange = this.statusChange.bind(this);\n    this.state = {\n      completed: this.props.book.completed,\n    }\n  }\n\n  statusChange() {\n    const {book, updateBookStatus} = this.props;\n    const status =  !book.status || book.status === 'unread' ? 'completed' : 'unread'\n    this.setState({completed: status})\n    updateBookStatus(book.id, status);\n  }\n  \n  render() {\n    const { book, updateBookStatus} = this.props\n    const {volumeInfo} = book;\n    const bookCompleted = book.status === 'completed';\n    \n     const element = (\n        <div className=\"view\">\n          <input className=\"toggle\"\n                 type=\"checkbox\"\n                 checked={bookCompleted}\n                 onChange={() => this.statusChange()} />\n          <label style={{fontFamily: 'fantasy'}}>\n            {volumeInfo.title}\n          </label>\n          <p style={{fontSize: '14px', textAlign: 'left', marginLeft: '60px', fontFamily: 'fantasy'}}>\n            {`--  ${volumeInfo.authors[0]}`}\n          </p>\n        </div>\n      )\n\n    return (\n      <li className={classnames({\n        completed: bookCompleted,\n      })} style={{borderBottom: 'none'}}>\n        {element}\n      </li>\n    )\n  }\n}\n","import React from 'react';\n\nconst BooksContext = React.createContext({});\n\nexport default BooksContext","import React from 'react'\nimport PropTypes from 'prop-types'\nimport BookItem from './BookItem'\nimport BooksContext from '../context/BooksContext'\n\nconst BookList = ({ updateBookStatus, actions }) => (\n  <BooksContext.Consumer>\n         {({books}) => \n         (\n          <ul className=\"todo-list\">\n          {books.map(book =>\n            <>\n              <BookItem key={book.id} book={book} updateBookStatus={updateBookStatus} {...actions} />\n              <img src={book.volumeInfo.imageLinks.thumbnail} style={{marginLeft: '60px'}}/>\n              <hr style={{'border': '1px solid #ededed'}}/>\n            </>\n          )}\n        </ul>\n         )}\n  </BooksContext.Consumer>\n)\n\nBookList.propTypes = {\n  actions: PropTypes.object.isRequired\n}\n\nexport default BookList\n","import { createSelector } from 'reselect'\nimport { SHOW_ALL, SHOW_COMPLETED, SHOW_ACTIVE } from '../constants/TodoFilters'\n\nconst getVisibilityFilter = state => state.visibilityFilter\nconst getTodos = state => state.todos\n\nexport const getVisibleBookList = createSelector(\n  [getVisibilityFilter, getTodos],\n  (visibilityFilter, todos) => {\n    switch (visibilityFilter) {\n      case SHOW_ALL:\n        return todos\n      case SHOW_COMPLETED:\n        return todos.filter(t => t.completed)\n      case SHOW_ACTIVE:\n        return todos.filter(t => !t.completed)\n      default:\n        throw new Error('Unknown filter: ' + visibilityFilter)\n    }\n  }\n)\n\nexport const getCompletedTodoCount = createSelector(\n  [getTodos],\n  todos => (\n    todos.reduce((count, todo) =>\n      todo.completed ? count + 1 : count,\n      0\n    )\n  )\n)","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as TodoActions from '../actions'\nimport BookList from '../components/BookList'\nimport { getVisibleBookList } from '../selectors'\n\nconst mapStateToProps = state => ({\n  filteredTodos: getVisibleBookList(state)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(TodoActions, dispatch)\n})\n\n\nconst VisibleBookList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BookList)\n\nexport default VisibleBookList\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Footer from \"./Footer\";\nimport VisibleBookList from \"../containers/VisibleBookList\";\nimport BooksContext from '../context/BooksContext';\n\nclass MainSection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      books: [],\n      completedBooks: 0,\n    };\n    this.updateBookStatus = this.updateBookStatus.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\n      \"https://www.googleapis.com/books/v1/volumes?q=inauthor:Eileen%20Chang\"\n    )\n      .then((response) => response.json())\n      .then((myData) => this.setState({ books: myData.items }));\n  }\n\n  updateBookStatus(bookId, status) {\n    let newBooks = this.state.books;\n    const book = newBooks.find((book) => book.id === bookId);\n    book.status = status;\n    this.setState({\n      books: newBooks,\n      completedBooks:\n        status === \"completed\"\n          ? this.state.completedBooks + 1\n          : this.state.completedBooks - 1,\n    });\n  }\n\n  render() {\n    return (\n      <BooksContext.Provider value={{books: this.state.books}}>\n      <section className=\"main\">\n        <VisibleBookList\n          updateBookStatus={this.updateBookStatus}\n        />\n        <Footer\n          completedCount={this.state.completedBooks}\n          activeCount={this.state.books.length - this.state.completedBooks}\n          onClearCompleted={this.props.actions.clearCompleted}\n        />\n      </section>\n    </BooksContext.Provider>\n    );\n  }\n}\n\nMainSection.propTypes = {\n  actions: PropTypes.object.isRequired,\n};\n\nexport default MainSection;\n\n","import { connect } from 'react-redux'\nimport * as TodoActions from '../actions'\nimport { bindActionCreators } from 'redux'\nimport MainSection from '../components/MainSection'\nimport { getCompletedTodoCount } from '../selectors'\n\n\nconst mapStateToProps = state => ({\n  todosCount: state.todos.length,\n  completedCount: getCompletedTodoCount(state)\n})\n\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(TodoActions, dispatch)\n})\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MainSection)\n\n","import React from 'react'\nimport Header from '../containers/Header'\nimport MainSection from '../containers/MainSection'\n\nconst App = () => (\n  <div>\n    <Header />\n    <MainSection />\n  </div>\n)\n\nexport default App\n","import {\n  ADD_TODO,\n  DELETE_TODO,\n  EDIT_TODO,\n  COMPLETE_TODO,\n  COMPLETE_ALL_TODOS,\n  CLEAR_COMPLETED\n} from '../constants/ActionTypes'\n\nconst initialState = [\n  {\n    text: 'Use Redux',\n    completed: false,\n    id: 0\n  }\n]\n\nexport default function todos(state = initialState, action) {\n  switch (action.type) {\n    case ADD_TODO:\n      return [\n        ...state,\n        {\n          id: state.reduce((maxId, todo) => Math.max(todo.id, maxId), -1) + 1,\n          completed: false,\n          text: action.text\n        }\n      ]\n\n    case DELETE_TODO:\n      return state.filter(todo =>\n        todo.id !== action.id\n      )\n\n    case EDIT_TODO:\n      return state.map(todo =>\n        todo.id === action.id ?\n          { ...todo, text: action.text } :\n          todo\n      )\n\n    case COMPLETE_TODO:\n      return state.map(todo =>\n        todo.id === action.id ?\n          { ...todo, completed: !todo.completed } :\n          todo\n      )\n\n    case COMPLETE_ALL_TODOS:\n      const areAllMarked = state.every(todo => todo.completed)\n      return state.map(todo => ({\n        ...todo,\n        completed: !areAllMarked\n      }))\n\n    case CLEAR_COMPLETED:\n      return state.filter(todo => todo.completed === false)\n\n    default:\n      return state\n  }\n}\n","import { SET_VISIBILITY_FILTER } from '../constants/ActionTypes'\nimport { SHOW_ALL } from '../constants/TodoFilters'\n\nconst visibilityFilter = (state = SHOW_ALL, action) => {\n  switch (action.type) {\n    case SET_VISIBILITY_FILTER:\n      return action.filter\n    default:\n      return state\n  }\n}\n\nexport default visibilityFilter","import { combineReducers } from 'redux'\nimport todos from './todos'\nimport visibilityFilter from './visibilityFilter'\n\nconst rootReducer = combineReducers({\n  todos,\n  visibilityFilter\n})\n\nexport default rootReducer\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport App from './components/App'\nimport reducer from './reducers'\nimport 'todomvc-app-css/index.css'\n\nconst store = createStore(reducer)\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}